ARM GAS  /tmp/ccISzwhq.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-sp-d16
  26              	NMI_Handler:
  27              	.LFB138:
  28              		.file 1 "Src/stm32f7xx_it.c"
   1:Src/stm32f7xx_it.c **** /**
   2:Src/stm32f7xx_it.c ****   ******************************************************************************
   3:Src/stm32f7xx_it.c ****   * @file    stm32f7xx_it.c
   4:Src/stm32f7xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f7xx_it.c ****   ******************************************************************************
   6:Src/stm32f7xx_it.c ****   *
   7:Src/stm32f7xx_it.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
   8:Src/stm32f7xx_it.c ****   *
   9:Src/stm32f7xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f7xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f7xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f7xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f7xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f7xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f7xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f7xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f7xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f7xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f7xx_it.c ****   *
  20:Src/stm32f7xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f7xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f7xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f7xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f7xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f7xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f7xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f7xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f7xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f7xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f7xx_it.c ****   *
ARM GAS  /tmp/ccISzwhq.s 			page 2


  31:Src/stm32f7xx_it.c ****   ******************************************************************************
  32:Src/stm32f7xx_it.c ****   */
  33:Src/stm32f7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f7xx_it.c **** #include "stm32f7xx_hal.h"
  35:Src/stm32f7xx_it.c **** #include "stm32f7xx.h"
  36:Src/stm32f7xx_it.c **** #include "stm32f7xx_it.h"
  37:Src/stm32f7xx_it.c **** 
  38:Src/stm32f7xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f7xx_it.c **** 
  40:Src/stm32f7xx_it.c **** /* USER CODE END 0 */
  41:Src/stm32f7xx_it.c **** 
  42:Src/stm32f7xx_it.c **** /* External variables --------------------------------------------------------*/
  43:Src/stm32f7xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_OTG_FS;
  44:Src/stm32f7xx_it.c **** extern DMA_HandleTypeDef hdma_spi2_tx;
  45:Src/stm32f7xx_it.c **** extern DMA_HandleTypeDef hdma_spi5_tx;
  46:Src/stm32f7xx_it.c **** extern TIM_HandleTypeDef htim1;
  47:Src/stm32f7xx_it.c **** extern TIM_HandleTypeDef htim8;
  48:Src/stm32f7xx_it.c **** extern TIM_HandleTypeDef htim9;
  49:Src/stm32f7xx_it.c **** 
  50:Src/stm32f7xx_it.c **** extern TIM_HandleTypeDef htim6;
  51:Src/stm32f7xx_it.c **** 
  52:Src/stm32f7xx_it.c **** /******************************************************************************/
  53:Src/stm32f7xx_it.c **** /*            Cortex-M7 Processor Interruption and Exception Handlers         */ 
  54:Src/stm32f7xx_it.c **** /******************************************************************************/
  55:Src/stm32f7xx_it.c **** 
  56:Src/stm32f7xx_it.c **** /**
  57:Src/stm32f7xx_it.c **** * @brief This function handles Non maskable interrupt.
  58:Src/stm32f7xx_it.c **** */
  59:Src/stm32f7xx_it.c **** void NMI_Handler(void)
  60:Src/stm32f7xx_it.c **** {
  29              		.loc 1 60 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  61:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  62:Src/stm32f7xx_it.c **** 
  63:Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  64:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  65:Src/stm32f7xx_it.c **** 
  66:Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  67:Src/stm32f7xx_it.c **** }
  34              		.loc 1 67 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE138:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv5-sp-d16
  47              	HardFault_Handler:
  48              	.LFB139:
  68:Src/stm32f7xx_it.c **** 
  69:Src/stm32f7xx_it.c **** /**
ARM GAS  /tmp/ccISzwhq.s 			page 3


  70:Src/stm32f7xx_it.c **** * @brief This function handles Hard fault interrupt.
  71:Src/stm32f7xx_it.c **** */
  72:Src/stm32f7xx_it.c **** void HardFault_Handler(void)
  73:Src/stm32f7xx_it.c **** {
  49              		.loc 1 73 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L3:
  74:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  75:Src/stm32f7xx_it.c **** 
  76:Src/stm32f7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  77:Src/stm32f7xx_it.c ****   while (1)
  56              		.loc 1 77 3 discriminator 1 view .LVU3
  78:Src/stm32f7xx_it.c ****   {
  79:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  80:Src/stm32f7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  81:Src/stm32f7xx_it.c ****   }
  57              		.loc 1 81 3 discriminator 1 view .LVU4
  58 0000 FEE7     		b	.L3
  59              		.cfi_endproc
  60              	.LFE139:
  62              		.section	.text.MemManage_Handler,"ax",%progbits
  63              		.align	1
  64              		.global	MemManage_Handler
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu fpv5-sp-d16
  70              	MemManage_Handler:
  71              	.LFB140:
  82:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  83:Src/stm32f7xx_it.c **** 
  84:Src/stm32f7xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  85:Src/stm32f7xx_it.c **** }
  86:Src/stm32f7xx_it.c **** 
  87:Src/stm32f7xx_it.c **** /**
  88:Src/stm32f7xx_it.c **** * @brief This function handles Memory management fault.
  89:Src/stm32f7xx_it.c **** */
  90:Src/stm32f7xx_it.c **** void MemManage_Handler(void)
  91:Src/stm32f7xx_it.c **** {
  72              		.loc 1 91 1 view -0
  73              		.cfi_startproc
  74              		@ Volatile: function does not return.
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78              	.L5:
  92:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  93:Src/stm32f7xx_it.c **** 
  94:Src/stm32f7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  95:Src/stm32f7xx_it.c ****   while (1)
  79              		.loc 1 95 3 discriminator 1 view .LVU6
  96:Src/stm32f7xx_it.c ****   {
  97:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
ARM GAS  /tmp/ccISzwhq.s 			page 4


  98:Src/stm32f7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
  99:Src/stm32f7xx_it.c ****   }
  80              		.loc 1 99 3 discriminator 1 view .LVU7
  81 0000 FEE7     		b	.L5
  82              		.cfi_endproc
  83              	.LFE140:
  85              		.section	.text.BusFault_Handler,"ax",%progbits
  86              		.align	1
  87              		.global	BusFault_Handler
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu fpv5-sp-d16
  93              	BusFault_Handler:
  94              	.LFB141:
 100:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
 101:Src/stm32f7xx_it.c **** 
 102:Src/stm32f7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
 103:Src/stm32f7xx_it.c **** }
 104:Src/stm32f7xx_it.c **** 
 105:Src/stm32f7xx_it.c **** /**
 106:Src/stm32f7xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
 107:Src/stm32f7xx_it.c **** */
 108:Src/stm32f7xx_it.c **** void BusFault_Handler(void)
 109:Src/stm32f7xx_it.c **** {
  95              		.loc 1 109 1 view -0
  96              		.cfi_startproc
  97              		@ Volatile: function does not return.
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101              	.L7:
 110:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 111:Src/stm32f7xx_it.c **** 
 112:Src/stm32f7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 113:Src/stm32f7xx_it.c ****   while (1)
 102              		.loc 1 113 3 discriminator 1 view .LVU9
 114:Src/stm32f7xx_it.c ****   {
 115:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 116:Src/stm32f7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 117:Src/stm32f7xx_it.c ****   }
 103              		.loc 1 117 3 discriminator 1 view .LVU10
 104 0000 FEE7     		b	.L7
 105              		.cfi_endproc
 106              	.LFE141:
 108              		.section	.text.UsageFault_Handler,"ax",%progbits
 109              		.align	1
 110              		.global	UsageFault_Handler
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv5-sp-d16
 116              	UsageFault_Handler:
 117              	.LFB142:
 118:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 119:Src/stm32f7xx_it.c **** 
 120:Src/stm32f7xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
ARM GAS  /tmp/ccISzwhq.s 			page 5


 121:Src/stm32f7xx_it.c **** }
 122:Src/stm32f7xx_it.c **** 
 123:Src/stm32f7xx_it.c **** /**
 124:Src/stm32f7xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 125:Src/stm32f7xx_it.c **** */
 126:Src/stm32f7xx_it.c **** void UsageFault_Handler(void)
 127:Src/stm32f7xx_it.c **** {
 118              		.loc 1 127 1 view -0
 119              		.cfi_startproc
 120              		@ Volatile: function does not return.
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124              	.L9:
 128:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 129:Src/stm32f7xx_it.c **** 
 130:Src/stm32f7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 131:Src/stm32f7xx_it.c ****   while (1)
 125              		.loc 1 131 3 discriminator 1 view .LVU12
 132:Src/stm32f7xx_it.c ****   {
 133:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 134:Src/stm32f7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 135:Src/stm32f7xx_it.c ****   }
 126              		.loc 1 135 3 discriminator 1 view .LVU13
 127 0000 FEE7     		b	.L9
 128              		.cfi_endproc
 129              	.LFE142:
 131              		.section	.text.SVC_Handler,"ax",%progbits
 132              		.align	1
 133              		.global	SVC_Handler
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu fpv5-sp-d16
 139              	SVC_Handler:
 140              	.LFB143:
 136:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 137:Src/stm32f7xx_it.c **** 
 138:Src/stm32f7xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 139:Src/stm32f7xx_it.c **** }
 140:Src/stm32f7xx_it.c **** 
 141:Src/stm32f7xx_it.c **** /**
 142:Src/stm32f7xx_it.c **** * @brief This function handles System service call via SWI instruction.
 143:Src/stm32f7xx_it.c **** */
 144:Src/stm32f7xx_it.c **** void SVC_Handler(void)
 145:Src/stm32f7xx_it.c **** {
 141              		.loc 1 145 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 147:Src/stm32f7xx_it.c **** 
 148:Src/stm32f7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 149:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 150:Src/stm32f7xx_it.c **** 
 151:Src/stm32f7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
ARM GAS  /tmp/ccISzwhq.s 			page 6


 152:Src/stm32f7xx_it.c **** }
 146              		.loc 1 152 1 view .LVU15
 147 0000 7047     		bx	lr
 148              		.cfi_endproc
 149              	.LFE143:
 151              		.section	.text.DebugMon_Handler,"ax",%progbits
 152              		.align	1
 153              		.global	DebugMon_Handler
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu fpv5-sp-d16
 159              	DebugMon_Handler:
 160              	.LFB144:
 153:Src/stm32f7xx_it.c **** 
 154:Src/stm32f7xx_it.c **** /**
 155:Src/stm32f7xx_it.c **** * @brief This function handles Debug monitor.
 156:Src/stm32f7xx_it.c **** */
 157:Src/stm32f7xx_it.c **** void DebugMon_Handler(void)
 158:Src/stm32f7xx_it.c **** {
 161              		.loc 1 158 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 159:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 160:Src/stm32f7xx_it.c **** 
 161:Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 162:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 163:Src/stm32f7xx_it.c **** 
 164:Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 165:Src/stm32f7xx_it.c **** }
 166              		.loc 1 165 1 view .LVU17
 167 0000 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE144:
 171              		.section	.text.PendSV_Handler,"ax",%progbits
 172              		.align	1
 173              		.global	PendSV_Handler
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 177              		.fpu fpv5-sp-d16
 179              	PendSV_Handler:
 180              	.LFB145:
 166:Src/stm32f7xx_it.c **** 
 167:Src/stm32f7xx_it.c **** /**
 168:Src/stm32f7xx_it.c **** * @brief This function handles Pendable request for system service.
 169:Src/stm32f7xx_it.c **** */
 170:Src/stm32f7xx_it.c **** void PendSV_Handler(void)
 171:Src/stm32f7xx_it.c **** {
 181              		.loc 1 171 1 view -0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		@ link register save eliminated.
 172:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
ARM GAS  /tmp/ccISzwhq.s 			page 7


 173:Src/stm32f7xx_it.c **** 
 174:Src/stm32f7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 175:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 176:Src/stm32f7xx_it.c **** 
 177:Src/stm32f7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 178:Src/stm32f7xx_it.c **** }
 186              		.loc 1 178 1 view .LVU19
 187 0000 7047     		bx	lr
 188              		.cfi_endproc
 189              	.LFE145:
 191              		.section	.text.SysTick_Handler,"ax",%progbits
 192              		.align	1
 193              		.global	SysTick_Handler
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv5-sp-d16
 199              	SysTick_Handler:
 200              	.LFB146:
 179:Src/stm32f7xx_it.c **** 
 180:Src/stm32f7xx_it.c **** /**
 181:Src/stm32f7xx_it.c **** * @brief This function handles System tick timer.
 182:Src/stm32f7xx_it.c **** */
 183:Src/stm32f7xx_it.c **** void SysTick_Handler(void)
 184:Src/stm32f7xx_it.c **** {
 201              		.loc 1 184 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              	.LCFI0:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 185:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 186:Src/stm32f7xx_it.c **** 
 187:Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 188:Src/stm32f7xx_it.c ****   HAL_SYSTICK_IRQHandler();
 210              		.loc 1 188 3 view .LVU21
 211 0002 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 212              	.LVL0:
 189:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 190:Src/stm32f7xx_it.c **** 
 191:Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 192:Src/stm32f7xx_it.c **** }
 213              		.loc 1 192 1 is_stmt 0 view .LVU22
 214 0006 08BD     		pop	{r3, pc}
 215              		.cfi_endproc
 216              	.LFE146:
 218              		.section	.text.DMA1_Stream4_IRQHandler,"ax",%progbits
 219              		.align	1
 220              		.global	DMA1_Stream4_IRQHandler
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 224              		.fpu fpv5-sp-d16
 226              	DMA1_Stream4_IRQHandler:
ARM GAS  /tmp/ccISzwhq.s 			page 8


 227              	.LFB147:
 193:Src/stm32f7xx_it.c **** 
 194:Src/stm32f7xx_it.c **** /******************************************************************************/
 195:Src/stm32f7xx_it.c **** /* STM32F7xx Peripheral Interrupt Handlers                                    */
 196:Src/stm32f7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 197:Src/stm32f7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 198:Src/stm32f7xx_it.c **** /* please refer to the startup file (startup_stm32f7xx.s).                    */
 199:Src/stm32f7xx_it.c **** /******************************************************************************/
 200:Src/stm32f7xx_it.c **** 
 201:Src/stm32f7xx_it.c **** /**
 202:Src/stm32f7xx_it.c **** * @brief This function handles DMA1 stream4 global interrupt.
 203:Src/stm32f7xx_it.c **** */
 204:Src/stm32f7xx_it.c **** void DMA1_Stream4_IRQHandler(void)
 205:Src/stm32f7xx_it.c **** {
 228              		.loc 1 205 1 is_stmt 1 view -0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 08B5     		push	{r3, lr}
 233              	.LCFI1:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 3, -8
 236              		.cfi_offset 14, -4
 206:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */
 207:Src/stm32f7xx_it.c **** 
 208:Src/stm32f7xx_it.c ****   /* USER CODE END DMA1_Stream4_IRQn 0 */
 209:Src/stm32f7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi2_tx);
 237              		.loc 1 209 3 view .LVU24
 238 0002 0248     		ldr	r0, .L17
 239 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 240              	.LVL1:
 210:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */
 211:Src/stm32f7xx_it.c **** 
 212:Src/stm32f7xx_it.c ****   /* USER CODE END DMA1_Stream4_IRQn 1 */
 213:Src/stm32f7xx_it.c **** }
 241              		.loc 1 213 1 is_stmt 0 view .LVU25
 242 0008 08BD     		pop	{r3, pc}
 243              	.L18:
 244 000a 00BF     		.align	2
 245              	.L17:
 246 000c 00000000 		.word	hdma_spi2_tx
 247              		.cfi_endproc
 248              	.LFE147:
 250              		.section	.text.TIM1_BRK_TIM9_IRQHandler,"ax",%progbits
 251              		.align	1
 252              		.global	TIM1_BRK_TIM9_IRQHandler
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu fpv5-sp-d16
 258              	TIM1_BRK_TIM9_IRQHandler:
 259              	.LFB148:
 214:Src/stm32f7xx_it.c **** 
 215:Src/stm32f7xx_it.c **** /**
 216:Src/stm32f7xx_it.c **** * @brief This function handles TIM1 break interrupt and TIM9 global interrupt.
 217:Src/stm32f7xx_it.c **** */
 218:Src/stm32f7xx_it.c **** void TIM1_BRK_TIM9_IRQHandler(void)
ARM GAS  /tmp/ccISzwhq.s 			page 9


 219:Src/stm32f7xx_it.c **** {
 260              		.loc 1 219 1 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264 0000 08B5     		push	{r3, lr}
 265              	.LCFI2:
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 3, -8
 268              		.cfi_offset 14, -4
 220:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 0 */
 221:Src/stm32f7xx_it.c **** 
 222:Src/stm32f7xx_it.c ****   /* USER CODE END TIM1_BRK_TIM9_IRQn 0 */
 223:Src/stm32f7xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 269              		.loc 1 223 3 view .LVU27
 270 0002 0348     		ldr	r0, .L21
 271 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 272              	.LVL2:
 224:Src/stm32f7xx_it.c ****   HAL_TIM_IRQHandler(&htim9);
 273              		.loc 1 224 3 view .LVU28
 274 0008 0248     		ldr	r0, .L21+4
 275 000a FFF7FEFF 		bl	HAL_TIM_IRQHandler
 276              	.LVL3:
 225:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 1 */
 226:Src/stm32f7xx_it.c **** 
 227:Src/stm32f7xx_it.c ****   /* USER CODE END TIM1_BRK_TIM9_IRQn 1 */
 228:Src/stm32f7xx_it.c **** }
 277              		.loc 1 228 1 is_stmt 0 view .LVU29
 278 000e 08BD     		pop	{r3, pc}
 279              	.L22:
 280              		.align	2
 281              	.L21:
 282 0010 00000000 		.word	htim1
 283 0014 00000000 		.word	htim9
 284              		.cfi_endproc
 285              	.LFE148:
 287              		.section	.text.TIM8_TRG_COM_TIM14_IRQHandler,"ax",%progbits
 288              		.align	1
 289              		.global	TIM8_TRG_COM_TIM14_IRQHandler
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv5-sp-d16
 295              	TIM8_TRG_COM_TIM14_IRQHandler:
 296              	.LFB149:
 229:Src/stm32f7xx_it.c **** 
 230:Src/stm32f7xx_it.c **** /**
 231:Src/stm32f7xx_it.c **** * @brief This function handles TIM8 trigger and commutation interrupts and TIM14 global interrupt.
 232:Src/stm32f7xx_it.c **** */
 233:Src/stm32f7xx_it.c **** void TIM8_TRG_COM_TIM14_IRQHandler(void)
 234:Src/stm32f7xx_it.c **** {
 297              		.loc 1 234 1 is_stmt 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301 0000 08B5     		push	{r3, lr}
 302              	.LCFI3:
ARM GAS  /tmp/ccISzwhq.s 			page 10


 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 3, -8
 305              		.cfi_offset 14, -4
 235:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN TIM8_TRG_COM_TIM14_IRQn 0 */
 236:Src/stm32f7xx_it.c **** 
 237:Src/stm32f7xx_it.c ****   /* USER CODE END TIM8_TRG_COM_TIM14_IRQn 0 */
 238:Src/stm32f7xx_it.c ****   HAL_TIM_IRQHandler(&htim8);
 306              		.loc 1 238 3 view .LVU31
 307 0002 0248     		ldr	r0, .L25
 308 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 309              	.LVL4:
 239:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN TIM8_TRG_COM_TIM14_IRQn 1 */
 240:Src/stm32f7xx_it.c **** 
 241:Src/stm32f7xx_it.c ****   /* USER CODE END TIM8_TRG_COM_TIM14_IRQn 1 */
 242:Src/stm32f7xx_it.c **** }
 310              		.loc 1 242 1 is_stmt 0 view .LVU32
 311 0008 08BD     		pop	{r3, pc}
 312              	.L26:
 313 000a 00BF     		.align	2
 314              	.L25:
 315 000c 00000000 		.word	htim8
 316              		.cfi_endproc
 317              	.LFE149:
 319              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 320              		.align	1
 321              		.global	TIM6_DAC_IRQHandler
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu fpv5-sp-d16
 327              	TIM6_DAC_IRQHandler:
 328              	.LFB150:
 243:Src/stm32f7xx_it.c **** 
 244:Src/stm32f7xx_it.c **** /**
 245:Src/stm32f7xx_it.c **** * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
 246:Src/stm32f7xx_it.c **** */
 247:Src/stm32f7xx_it.c **** void TIM6_DAC_IRQHandler(void)
 248:Src/stm32f7xx_it.c **** {
 329              		.loc 1 248 1 is_stmt 1 view -0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333 0000 08B5     		push	{r3, lr}
 334              	.LCFI4:
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 3, -8
 337              		.cfi_offset 14, -4
 249:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
 250:Src/stm32f7xx_it.c **** 
 251:Src/stm32f7xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
 252:Src/stm32f7xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 338              		.loc 1 252 3 view .LVU34
 339 0002 0248     		ldr	r0, .L29
 340 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 341              	.LVL5:
 253:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 254:Src/stm32f7xx_it.c **** 
ARM GAS  /tmp/ccISzwhq.s 			page 11


 255:Src/stm32f7xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
 256:Src/stm32f7xx_it.c **** }
 342              		.loc 1 256 1 is_stmt 0 view .LVU35
 343 0008 08BD     		pop	{r3, pc}
 344              	.L30:
 345 000a 00BF     		.align	2
 346              	.L29:
 347 000c 00000000 		.word	htim6
 348              		.cfi_endproc
 349              	.LFE150:
 351              		.section	.text.OTG_FS_IRQHandler,"ax",%progbits
 352              		.align	1
 353              		.global	OTG_FS_IRQHandler
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 357              		.fpu fpv5-sp-d16
 359              	OTG_FS_IRQHandler:
 360              	.LFB151:
 257:Src/stm32f7xx_it.c **** 
 258:Src/stm32f7xx_it.c **** /**
 259:Src/stm32f7xx_it.c **** * @brief This function handles USB On The Go FS global interrupt.
 260:Src/stm32f7xx_it.c **** */
 261:Src/stm32f7xx_it.c **** void OTG_FS_IRQHandler(void)
 262:Src/stm32f7xx_it.c **** {
 361              		.loc 1 262 1 is_stmt 1 view -0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365 0000 08B5     		push	{r3, lr}
 366              	.LCFI5:
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 3, -8
 369              		.cfi_offset 14, -4
 263:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 0 */
 264:Src/stm32f7xx_it.c **** 
 265:Src/stm32f7xx_it.c ****   /* USER CODE END OTG_FS_IRQn 0 */
 266:Src/stm32f7xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_OTG_FS);
 370              		.loc 1 266 3 view .LVU37
 371 0002 0248     		ldr	r0, .L33
 372 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 373              	.LVL6:
 267:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 1 */
 268:Src/stm32f7xx_it.c **** 
 269:Src/stm32f7xx_it.c ****   /* USER CODE END OTG_FS_IRQn 1 */
 270:Src/stm32f7xx_it.c **** }
 374              		.loc 1 270 1 is_stmt 0 view .LVU38
 375 0008 08BD     		pop	{r3, pc}
 376              	.L34:
 377 000a 00BF     		.align	2
 378              	.L33:
 379 000c 00000000 		.word	hpcd_USB_OTG_FS
 380              		.cfi_endproc
 381              	.LFE151:
 383              		.section	.text.DMA2_Stream6_IRQHandler,"ax",%progbits
 384              		.align	1
 385              		.global	DMA2_Stream6_IRQHandler
ARM GAS  /tmp/ccISzwhq.s 			page 12


 386              		.syntax unified
 387              		.thumb
 388              		.thumb_func
 389              		.fpu fpv5-sp-d16
 391              	DMA2_Stream6_IRQHandler:
 392              	.LFB152:
 271:Src/stm32f7xx_it.c **** 
 272:Src/stm32f7xx_it.c **** /**
 273:Src/stm32f7xx_it.c **** * @brief This function handles DMA2 stream6 global interrupt.
 274:Src/stm32f7xx_it.c **** */
 275:Src/stm32f7xx_it.c **** void DMA2_Stream6_IRQHandler(void)
 276:Src/stm32f7xx_it.c **** {
 393              		.loc 1 276 1 is_stmt 1 view -0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397 0000 08B5     		push	{r3, lr}
 398              	.LCFI6:
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 3, -8
 401              		.cfi_offset 14, -4
 277:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA2_Stream6_IRQn 0 */
 278:Src/stm32f7xx_it.c **** 
 279:Src/stm32f7xx_it.c ****   /* USER CODE END DMA2_Stream6_IRQn 0 */
 280:Src/stm32f7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi5_tx);
 402              		.loc 1 280 3 view .LVU40
 403 0002 0248     		ldr	r0, .L37
 404 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 405              	.LVL7:
 281:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA2_Stream6_IRQn 1 */
 282:Src/stm32f7xx_it.c **** 
 283:Src/stm32f7xx_it.c ****   /* USER CODE END DMA2_Stream6_IRQn 1 */
 284:Src/stm32f7xx_it.c **** }
 406              		.loc 1 284 1 is_stmt 0 view .LVU41
 407 0008 08BD     		pop	{r3, pc}
 408              	.L38:
 409 000a 00BF     		.align	2
 410              	.L37:
 411 000c 00000000 		.word	hdma_spi5_tx
 412              		.cfi_endproc
 413              	.LFE152:
 415              		.text
 416              	.Letext0:
 417              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 418              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 419              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 420              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 421              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 422              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 423              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 424              		.file 9 "/usr/lib/gcc/arm-none-eabi/8.3.0/include/stddef.h"
 425              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 426              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 427              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 428              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 429              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_usb.h"
 430              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pcd.h"
ARM GAS  /tmp/ccISzwhq.s 			page 13


 431              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
ARM GAS  /tmp/ccISzwhq.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_it.c
     /tmp/ccISzwhq.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccISzwhq.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccISzwhq.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccISzwhq.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccISzwhq.s:63     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccISzwhq.s:70     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccISzwhq.s:86     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccISzwhq.s:93     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccISzwhq.s:109    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccISzwhq.s:116    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccISzwhq.s:132    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccISzwhq.s:139    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccISzwhq.s:152    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccISzwhq.s:159    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccISzwhq.s:172    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccISzwhq.s:179    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccISzwhq.s:192    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccISzwhq.s:199    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccISzwhq.s:219    .text.DMA1_Stream4_IRQHandler:0000000000000000 $t
     /tmp/ccISzwhq.s:226    .text.DMA1_Stream4_IRQHandler:0000000000000000 DMA1_Stream4_IRQHandler
     /tmp/ccISzwhq.s:246    .text.DMA1_Stream4_IRQHandler:000000000000000c $d
     /tmp/ccISzwhq.s:251    .text.TIM1_BRK_TIM9_IRQHandler:0000000000000000 $t
     /tmp/ccISzwhq.s:258    .text.TIM1_BRK_TIM9_IRQHandler:0000000000000000 TIM1_BRK_TIM9_IRQHandler
     /tmp/ccISzwhq.s:282    .text.TIM1_BRK_TIM9_IRQHandler:0000000000000010 $d
     /tmp/ccISzwhq.s:288    .text.TIM8_TRG_COM_TIM14_IRQHandler:0000000000000000 $t
     /tmp/ccISzwhq.s:295    .text.TIM8_TRG_COM_TIM14_IRQHandler:0000000000000000 TIM8_TRG_COM_TIM14_IRQHandler
     /tmp/ccISzwhq.s:315    .text.TIM8_TRG_COM_TIM14_IRQHandler:000000000000000c $d
     /tmp/ccISzwhq.s:320    .text.TIM6_DAC_IRQHandler:0000000000000000 $t
     /tmp/ccISzwhq.s:327    .text.TIM6_DAC_IRQHandler:0000000000000000 TIM6_DAC_IRQHandler
     /tmp/ccISzwhq.s:347    .text.TIM6_DAC_IRQHandler:000000000000000c $d
     /tmp/ccISzwhq.s:352    .text.OTG_FS_IRQHandler:0000000000000000 $t
     /tmp/ccISzwhq.s:359    .text.OTG_FS_IRQHandler:0000000000000000 OTG_FS_IRQHandler
     /tmp/ccISzwhq.s:379    .text.OTG_FS_IRQHandler:000000000000000c $d
     /tmp/ccISzwhq.s:384    .text.DMA2_Stream6_IRQHandler:0000000000000000 $t
     /tmp/ccISzwhq.s:391    .text.DMA2_Stream6_IRQHandler:0000000000000000 DMA2_Stream6_IRQHandler
     /tmp/ccISzwhq.s:411    .text.DMA2_Stream6_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_SYSTICK_IRQHandler
HAL_DMA_IRQHandler
hdma_spi2_tx
HAL_TIM_IRQHandler
htim1
htim9
htim8
htim6
HAL_PCD_IRQHandler
hpcd_USB_OTG_FS
hdma_spi5_tx
